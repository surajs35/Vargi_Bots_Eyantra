<launch>
  
	<!-- Launch Task-5 Simulation Environment in Gazebo -->
	<include file="$(find pkg_vb_sim)/launch/task6_simulation.launch" />
  <rosparam file ="$(find pkg_ros_iot_bridge)/config/config_pyiot.yaml"/>

  <group ns="ur5_1">
    <!-- <rosparam command="load" file="$(find pkg_moveit_ur5_1_config)/config/joint_names.yaml" /> -->

    <include file="$(find pkg_moveit_ur5_1_config)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="/source_list">[/joint_states]</rosparam>
    </node>

    <include file="$(find pkg_moveit_ur5_1_config)/launch/move_group.launch">
      <arg name="publish_monitored_planning_scene" value="true"/>
    </include>
    <include file="$(find pkg_moveit_ur5_1_config)/launch/moveit_rviz_robot1.launch">
      <arg name="config" value="true"/>
    </include>

    <!-- Add Conveyor belt and shelf to Moveit! Planning Scene in RViz -->
    <arg name="scene_file" default="$(find pkg_task6)/config/rviz/ur5_1_with_belt_and_shelf.scene"/> 
    <node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(arg scene_file)"/>
    
    

  </group>


  <group ns="ur5_2">
    <!-- <rosparam command="load" file="$(find pkg_moveit_ur5_2_config)/config/joint_names.yaml" />   -->

    <include file="$(find pkg_moveit_ur5_2_config)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="/source_list">[/joint_states]</rosparam>
    </node>

    <include file="$(find pkg_moveit_ur5_2_config)/launch/move_group.launch">
      <arg name="publish_monitored_planning_scene" value="true"/>
    </include>
    <include file="$(find pkg_moveit_ur5_2_config)/launch/moveit_rviz_robot2.launch">
      <arg name="config" value="true"/>
    </include>

    <!-- Add Conveyor belt to Moveit! Planning Scene in RViz  -->
    <arg name="scene_file" default="$(find pkg_task6)/config/rviz/ur5_2_with_belt.scene"/> 
    <node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(arg scene_file)"/>

  </group>

  <!-- Ros Iot bridge server script node for spreadsheet update -->

  <node name= "node_action_server_ros_iot_bridge" pkg= "pkg_ros_iot_bridge" type="node_action_server_ros_iot_bridge.py" output="screen"/>

  <!-- Shell script for opening the Inventory management sheet -->
  <node pkg="pkg_task6" type="shell_script_for_sheet.sh" name="shell_script_for_sheet" output="screen">
        <param name="cmd" value="$(find pkg_task6)/launch/shell_script_for_sheet.sh"/>
  </node>
  

  <!-- Python nodes for Ur5 arms to pick and place -->
  <node name= "node_ur5_1_t6" pkg= "pkg_task6" type="node_ur5_1_t6.py" output="screen"/>

  <node name= "node_ur5_2_t6" pkg= "pkg_task6" type="node_ur5_2_t6.py" output="screen"/>


  <!-- Client node for sending goals to both Ur5 nodes and server -->
  <node name= "node_vb_client_t6" pkg ="pkg_task6" type="node_vb_client_t6.py" output="screen"/>

  <!-- Recording Bag File for Submission -->
    <!-- <arg name="record" default="false"/>
    <arg name="rec_name" default="t6.bag"/>

    <group if="$(arg record)">
        <node name="rosbag_record_pick" pkg="rosbag" type="record"
       args="record -O $(find pkg_task6)/bag_files/$(arg rec_name) chunksize=10 /eyrc/vb/ur5_1/vacuum_gripper/logical_camera/ur5_1 /eyrc/vb/ur5_2/vacuum_gripper/logical_camera/ur5_2" output="screen"/>
 </group> -->


</launch>